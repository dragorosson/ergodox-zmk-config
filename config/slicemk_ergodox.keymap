#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define LAYER_MAIN 0
#define LAYER_WIN 1
#define LAYER_MAC 2
#define LAYER_FN 3
#define LAYER_FNWIN 4
#define LAYER_FNMAC 5
#define LAYER_ARW 6

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        fn_win {
            if-layers = <LAYER_WIN LAYER_FN>;
            then-layer = <LAYER_FNWIN>;
        };
        fn_mac {
            if-layers = <LAYER_MAC LAYER_FN>;
            then-layer = <LAYER_FNMAC>;
        };
    };
    macros {
        profile_win: profile_win {
            label = "ZM_profile_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to LAYER_WIN>
                , <&bt BT_SEL 1>
                ;
        };
        profile_mac: profile_mac {
            label = "ZM_profile_mac";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to LAYER_MAC>
                , <&bt BT_SEL 2>
                ;
        };
        screenshot: screenshot {
            label = "ZM_screenshot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp SPC>
                , <&macro_release &kp LGUI>
                , <&macro_tap &kp S &kp C &kp R &kp E &kp E &kp N &kp S &kp H &kp O &kp T &kp ENTER>
                ;
        };
    };
};

/ {
	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
				&bootloader
				&kp GRAV   &kp NUMBER_1 &kp NUMBER_2  &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &none        &none      &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0  &kp BKSP
				&kp TAB    &kp Q        &kp W         &kp E        &kp R        &kp T        &profile_win &kp M_VOLU &kp Y        &kp U        &kp I        &kp O        &kp P         &kp BSLH
				&kp ESC    &kp A        &kp S         &kp D        &kp F        &kp G                                &kp H        &kp J        &kp K        &kp L        &kp SEMICOLON &kp QUOT
				&kp LSHIFT &kp Z        &kp X         &kp C        &kp V        &kp B        &profile_mac &kp M_VOLD &kp N        &kp M        &kp CMMA     &kp DOT      &kp FSLH      &kp RSHIFT
				&none      &none        &mo LAYER_ARW &none        &none                                                          &kp ENTER    &none        &none        &none         &kp DEL
				                                                                &kp BKSP     &kp DEL      &none      &none
				                                                   &kp SPC      &mo LAYER_FN &none        &none      &mo LAYER_FN &kp SPC
				                                                                             &none        &kp DEL
			>;
		};
		layer_1 {
			bindings = <
				&bootloader
				&trans   &trans &trans &trans   &trans   &trans &trans &kp C_PLAY_PAUSE &trans &trans &trans &trans &trans    &trans
				&trans   &trans &trans &trans   &trans   &trans &trans &trans           &trans &trans &trans &trans &trans    &trans
				&trans   &trans &trans &trans   &trans   &trans                         &trans &trans &trans &trans &trans    &trans
				&trans   &trans &trans &trans   &trans   &trans &trans &trans           &trans &trans &trans &trans &trans    &trans
				&kp LCTL &trans &trans &kp LGUI &kp LALT                                       &trans &trans &trans &kp PSCRN &trans
				                                         &trans &trans &trans           &trans
				                                &trans   &trans &trans &trans           &trans &trans
				                                                &trans &trans
			>;
		};
		layer_2 {
			bindings = <
				&bootloader
				&trans   &trans &trans &trans   &trans   &trans &trans &trans &trans &trans &trans &trans &trans      &trans
				&trans   &trans &trans &trans   &trans   &trans &trans &trans &trans &trans &trans &trans &trans      &trans
				&trans   &trans &trans &trans   &trans   &trans               &trans &trans &trans &trans &trans      &trans
				&trans   &trans &trans &trans   &trans   &trans &trans &trans &trans &trans &trans &trans &trans      &trans
				&kp LCTL &trans &trans &kp LALT &kp LGUI                             &trans &trans &trans &screenshot &trans
				                                         &trans &trans &trans &trans
				                                &trans   &trans &trans &trans &trans &trans
				                                                &trans &trans
			>;
		};
		layer_3 {
			bindings = <
				&bootloader
				&none  &none  &none  &none  &none  &none &bt BT_CLR   &none &none    &none    &none  &none     &kp MINUS &kp EQUAL
				&none  &none  &none  &none  &none  &none &out OUT_USB &none &none    &none    &none  &none     &kp LBKT  &kp RBKT
				&trans &none  &none  &none  &none  &none                    &kp LEFT &kp DOWN &kp UP &kp RIGHT &none     &kp ENTER
				&trans &none  &none  &none  &none  &none &out OUT_BLE &none &none    &none    &none  &none     &none     &trans
				&trans &trans &trans &trans &trans                                   &trans   &trans &trans    &trans    &trans
				                                   &none &none        &none &none
				                            &none  &none &none        &none &none    &none
				                                         &none        &none
			>;
		};
		layer_4 {
			bindings = <
				&bootloader
				&trans &trans    &trans    &trans    &trans    &trans    &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans    &kp LC(W) &trans    &kp LC(R) &kp LC(T) &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &kp LC(A) &kp LC(S) &kp LC(D) &kp LC(F) &trans                  &trans &trans &trans &trans &trans &trans
				&trans &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &trans    &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans    &trans    &trans    &trans                                   &trans &trans &trans &trans &trans
				                                               &trans    &trans &trans &trans
				                                     &trans    &trans    &trans &trans &trans &trans
				                                                         &trans &trans
			>;
		};
		layer_5 {
			bindings = <
				&bootloader
				&trans &trans        &trans    &trans    &trans    &trans    &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans        &kp LG(W) &trans    &kp LG(R) &kp LG(T) &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &kp LG(A)     &kp LG(S) &kp LG(D) &kp LG(F) &trans                  &trans &trans &trans &trans &trans &trans
				&trans &kp LG(LC(Z)) &kp LG(X) &kp LG(C) &kp LG(V) &trans    &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans        &trans    &trans    &trans                                   &trans &trans &trans &trans &trans
				                                                   &trans    &trans &trans &trans
				                                         &trans    &trans    &trans &trans &trans &trans
				                                                             &trans &trans
			>;
		};
		layer_6 {
			bindings = <
				&bootloader
				&none &none    &none    &none    &none &none &none &none &none &none &none &none &none &none
				&none &none    &kp UARW &none    &none &none &none &none &none &none &none &none &none &none
				&none &kp LARW &kp DARW &kp RARW &none &none             &none &none &none &none &none &none
				&none &none    &none    &none    &none &none &none &none &none &none &none &none &none &none
				&none &none    &none    &none    &none                         &none &none &none &none &none
				                                       &none &none &none &none
				                                 &none &none &none &none &none &none
				                                             &none &none
			>;
		};
	};

};
